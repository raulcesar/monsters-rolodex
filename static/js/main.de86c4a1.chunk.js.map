{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","username","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchTerm","target","value","state","axios","get","then","res","persons","data","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,mCAAML,EAAMG,QAAQG,SAApB,OACA,kCAAKN,EAAMG,QAAQI,MAAnB,YCFKC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMS,SAASC,KAAI,SAAAP,GACf,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCN7BO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,iBCmDHG,G,wDApDb,aAAgB,IAAD,8BACb,gBA4BFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SA5BrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,WAAY,IAJD,E,gEAUO,IAAD,OAYnBI,IAAMC,IAAN,8CACGC,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAIE,KACpB,EAAKV,SAAS,CAAET,SAAUkB,S,+BAQrB,IAAD,EACyBE,KAAKP,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,WACZW,EAAmBrB,EAASsB,QAAO,SAAA5B,GACvC,OAAOA,EAAQG,SAAS0B,cAAcC,SAASd,EAAWa,kBAI5D,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,SAASC,aAAcgB,KAAKhB,eACnD,cAAC,EAAD,CAAUJ,SAAUqB,W,GA7CVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de86c4a1.chunk.js","sourcesContent":["// import { Component } from 'react';\nimport './card.scss';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n        <h2> {props.monster.username} </h2>\n        <p> {props.monster.email} </p>\n    </div>\n)\n","// import { Component } from 'react';\nimport './card-list.scss';\nimport { Card } from '../card/card';\n\n\nexport const CardList = (props) => {\n    return <div className=\"card-list\">\n        {\n            props.monsters.map(monster => {\n                return <Card key={monster.id} monster={monster}/>;\n            })\n        }\n    </div>\n}\n","import './search-box.scss';\n\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n);","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      monsters: [],\n      searchTerm: ''\n    }\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount () {\n    // fetch('http://localhost:3030/pessoa/1512/fotothumb/1')\n    //   // fetch('http://localhost:3030/infoKDConnections')\n    //   .then(response => {\n    //     console.log(response);\n    //   })\n\n    // axios.get(`http://localhost:3030/pessoa/1512/fotothumb/1`)\n    //   .then(res => {\n    //     console.log(res.data);\n    //   });\n\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\n      .then(res => {\n        const persons = res.data;\n        this.setState({ monsters: persons });\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchTerm: e.target.value })\n  }\n\n  render () {\n    const { monsters, searchTerm } = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.username.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='Filter' handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}